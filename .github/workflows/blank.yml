name: CI/CD for Kit_It_project_db

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  # Job to lint SQL files
  lint-sql:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install SQLFluff
        run: pip install sqlfluff

      - name: Lint SQL files
        run: |
          sqlfluff lint sql/*.sql --dialect postgres
        # Uncomment the following line to enforce linting
        # continue-on-error: false

  # Job to set up the database and run migrations
  run-migrations:
    runs-on: ubuntu-latest
    needs: lint-sql  # Ensures linting passes before running migrations
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up PostgreSQL
        uses: postgres-actions/setup-postgres@v2
        with:
          postgres-version: 15
          database: kit_it_db
          username: postgres
          password: postgres_password

      - name: Run migrations
        run: |
          psql -h localhost -U postgres -d kit_it_db -f sql/create_tables.sql
          psql -h localhost -U postgres -d kit_it_db -f sql/insert_data.sql

  # Job for deployment (example)
  deploy:
    runs-on: ubuntu-latest
    needs: run-migrations  # Ensures migrations pass before deployment
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Deploy to production
        run: |
          echo "Deployment process starts here."
          # Add deployment commands here
